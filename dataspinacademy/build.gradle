plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.1.0'
	//id "com.github.node-gradle.node" version "3.5.0"
}
/*node {

	download = false
	// identify working directory in project
	workDir = file("${project.projectDir}/src/main/frontend-ui/dataspinacademy/nodejs")
	// NPM  work directory
	npmWorkDir = file("${project.projectDir}/src/main/frontend-ui/dataspinacademy/npm")
	// node modules directory
	nodeModulesDir = file("${project.projectDir}/src/main/frontend-ui/dataspinacademy")
}

task appNpmInstall(type: NpmTask){
	description = " read packge.json and install all jars"
	workingDir = file("${project.projectDir}/src/main/frontend-ui/dataspinacademy")
	args =["install", "--debug"]
}
task appNpmBuild(type: NpmTask){
	description = "Builds applciation for your frontend "
	workingDir =  file("${project.projectDir}/src/main/frontend-ui/dataspinacademy")
	args =["run", "build"]
}
task copyToFrontend(type: Copy){
	from "$projectDir/src/main/frontend-ui/dataspinacademy/build/"
	into "$buildDir/resources/main/static"
}

appNpmBuild.dependsOn appNpmInstall
copyToFrontend.dependsOn appNpmBuild
compileJava.dependsOn copyToFrontend*/

group = 'com.dataspin'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	//implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'


	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'


	implementation 'org.apache.poi:poi:5.2.3'
	implementation 'org.apache.poi:poi-ooxml:5.2.3'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
